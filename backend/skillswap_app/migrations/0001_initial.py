# Generated by Django 4.2.7 on 2025-09-16 15:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skillswap_app.category')),
            ],
            options={
                'db_table': 'skills',
            },
        ),
        migrations.CreateModel(
            name='SwapRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
                ('offered_skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offered_for', to='skillswap_app.skill')),
                ('requested_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_for', to='skillswap_app.skill')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'swap_requests',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('swap_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skillswap_app.swaprequest')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('avatar_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_teach', models.BooleanField(default=True)),
                ('experience_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], default='Intermediate', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skillswap_app.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_skills',
                'indexes': [models.Index(fields=['user'], name='user_skills_user_id_72b44f_idx'), models.Index(fields=['skill'], name='user_skills_skill_i_f1e47d_idx'), models.Index(fields=['can_teach'], name='user_skills_can_tea_2d2448_idx')],
                'unique_together': {('user', 'skill')},
            },
        ),
        migrations.AddIndex(
            model_name='swaprequest',
            index=models.Index(fields=['from_user'], name='swap_reques_from_us_7ea193_idx'),
        ),
        migrations.AddIndex(
            model_name='swaprequest',
            index=models.Index(fields=['to_user'], name='swap_reques_to_user_7b9f3f_idx'),
        ),
        migrations.AddIndex(
            model_name='swaprequest',
            index=models.Index(fields=['status'], name='swap_reques_status_d6fe84_idx'),
        ),
        migrations.AddIndex(
            model_name='swaprequest',
            index=models.Index(fields=['requested_skill'], name='swap_reques_request_7cf3d7_idx'),
        ),
        migrations.AddIndex(
            model_name='skill',
            index=models.Index(fields=['category'], name='skills_categor_0124d8_idx'),
        ),
        migrations.AddIndex(
            model_name='skill',
            index=models.Index(fields=['name'], name='skills_name_2b8674_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['to_user'], name='reviews_to_user_1f5dd5_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='reviews_rating_17e8a4_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['swap_request'], name='reviews_swap_re_8ba5c0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('from_user', 'swap_request')},
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['location'], name='profiles_locatio_64b8ec_idx'),
        ),
    ]
