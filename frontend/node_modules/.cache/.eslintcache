[{"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\index.js":"1","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\App.js":"2","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\Profile.js":"3","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\Dashboard.js":"4","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\BrowseSkills.js":"5","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\MyRequests.js":"6","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\Login.js":"7"},{"size":261,"mtime":1758043354926,"results":"8","hashOfConfig":"9"},{"size":3563,"mtime":1758038406908,"results":"10","hashOfConfig":"9"},{"size":12015,"mtime":1758038373554,"results":"11","hashOfConfig":"9"},{"size":7541,"mtime":1758039048450,"results":"12","hashOfConfig":"9"},{"size":8780,"mtime":1758038242238,"results":"13","hashOfConfig":"9"},{"size":7932,"mtime":1758043385261,"results":"14","hashOfConfig":"9"},{"size":3931,"mtime":1758029081584,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"viqagm",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\index.js",[],"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\App.js",[],"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\Profile.js",[],"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\BrowseSkills.js",["31","32"],"// frontend/src/components/BrowseSkills.js\r\n// frontend/src/components/BrowseSkills.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction BrowseSkills({ user }) {\r\n  const [skills, setSkills] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    search: '',\r\n    location: '',\r\n    category_id: ''\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [showRequestModal, setShowRequestModal] = useState(false);\r\n  const [selectedTeacher, setSelectedTeacher] = useState(null);\r\n  const [requestMessage, setRequestMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n    loadSkills();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadSkills();\r\n  }, [filters]);\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch('/api/categories/', {\r\n        credentials: 'include'\r\n      });\r\n      const data = await response.json();\r\n      setCategories(data.categories || []);\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n    }\r\n  };\r\n\r\n  const loadSkills = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const params = new URLSearchParams();\r\n      if (filters.search) params.append('search', filters.search);\r\n      if (filters.location) params.append('location', filters.location);\r\n      if (filters.category_id) params.append('category_id', filters.category_id);\r\n\r\n      const response = await fetch(`/api/skills/browse/?${params}`, {\r\n        credentials: 'include'\r\n      });\r\n      const data = await response.json();\r\n      setSkills(data.skills || []);\r\n    } catch (error) {\r\n      console.error('Error loading skills:', error);\r\n      setSkills([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  const openRequestModal = (teacher, skill) => {\r\n    setSelectedTeacher({ ...teacher, skill });\r\n    setShowRequestModal(true);\r\n    setRequestMessage(`Hi! I'd like to learn ${skill.name}. Could we arrange a skill exchange?`);\r\n  };\r\n\r\n  const sendRequest = async () => {\r\n    if (!selectedTeacher) return;\r\n\r\n    try {\r\n      const response = await fetch('/api/requests/send/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          to_user_id: selectedTeacher.id,\r\n          requested_skill_id: selectedTeacher.skill.id,\r\n          message: requestMessage\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Request sent successfully!');\r\n        setShowRequestModal(false);\r\n        setSelectedTeacher(null);\r\n        setRequestMessage('');\r\n      } else {\r\n        const data = await response.json();\r\n        alert(data.error || 'Failed to send request');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending request:', error);\r\n      alert('Error sending request');\r\n    }\r\n  };\r\n\r\n  const RequestModal = () => {\r\n    if (!showRequestModal || !selectedTeacher) return null;\r\n\r\n    return (\r\n      <div className=\"modal-overlay\" onClick={() => setShowRequestModal(false)}>\r\n        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <h3>Send Skill Exchange Request</h3>\r\n            <button className=\"close-btn\" onClick={() => setShowRequestModal(false)}>Ã—</button>\r\n          </div>\r\n          \r\n          <div>\r\n            <p><strong>To:</strong> {selectedTeacher.username}</p>\r\n            <p><strong>Skill:</strong> {selectedTeacher.skill.name}</p>\r\n            <p><strong>Location:</strong> {selectedTeacher.location || 'Not specified'}</p>\r\n            \r\n            <div className=\"form-group\" style={{marginTop: '1rem'}}>\r\n              <label>Message:</label>\r\n              <textarea\r\n                value={requestMessage}\r\n                onChange={(e) => setRequestMessage(e.target.value)}\r\n                rows=\"4\"\r\n                style={{width: '100%', padding: '0.5rem', marginTop: '0.5rem'}}\r\n                placeholder=\"Introduce yourself and explain what you'd like to learn...\"\r\n              />\r\n            </div>\r\n            \r\n            <div style={{display: 'flex', gap: '1rem', marginTop: '1.5rem'}}>\r\n              <button className=\"submit-btn\" onClick={sendRequest}>\r\n                Send Request\r\n              </button>\r\n              <button \r\n                style={{background: '#ccc', color: '#333'}} \r\n                className=\"submit-btn\"\r\n                onClick={() => setShowRequestModal(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading && skills.length === 0) {\r\n    return <div className=\"loading\">Loading skills...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"browse-skills\">\r\n      <div className=\"browse-header\">\r\n        <h1>Browse Skills</h1>\r\n        <p>Discover skills you can learn from community members</p>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"filters\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search skills...\"\r\n          value={filters.search}\r\n          onChange={(e) => handleFilterChange('search', e.target.value)}\r\n        />\r\n        \r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by location...\"\r\n          value={filters.location}\r\n          onChange={(e) => handleFilterChange('location', e.target.value)}\r\n        />\r\n        \r\n        <select\r\n          value={filters.category_id}\r\n          onChange={(e) => handleFilterChange('category_id', e.target.value)}\r\n        >\r\n          <option value=\"\">All Categories</option>\r\n          {categories.map(category => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        \r\n        <button onClick={loadSkills} className=\"action-btn\">\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {/* Skills Grid */}\r\n      {loading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : skills.length === 0 ? (\r\n        <div className=\"empty-state\">\r\n          <h3>No skills found</h3>\r\n          <p>Try adjusting your filters or check back later for new skills.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"skills-grid\">\r\n          {skills.map(skill => (\r\n            <div key={skill.id} className=\"skill-card\">\r\n              <div className=\"skill-header\">\r\n                <div>\r\n                  <h3>{skill.name}</h3>\r\n                  <span className=\"skill-category\">{skill.category}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              {skill.description && (\r\n                <p style={{margin: '1rem 0', color: '#666'}}>{skill.description}</p>\r\n              )}\r\n              \r\n              <div>\r\n                <h4 style={{marginBottom: '1rem'}}>\r\n                  Teachers Available ({skill.teachers?.length || 0})\r\n                </h4>\r\n                \r\n                {skill.teachers && skill.teachers.length > 0 ? (\r\n                  <div className=\"teachers-list\">\r\n                    {skill.teachers.map(teacher => (\r\n                      <div key={teacher.id} className=\"teacher-item\">\r\n                        <div className=\"teacher-info\">\r\n                          <div className=\"teacher-name\">{teacher.username}</div>\r\n                          <div className=\"teacher-location\">\r\n                            {teacher.location || 'Location not specified'} â€¢ \r\n                            Level: {teacher.experience_level} â€¢ \r\n                            Rating: {teacher.avg_rating > 0 ? `${teacher.avg_rating}/5` : 'No ratings yet'}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        {teacher.id !== user.id && (\r\n                          <button \r\n                            className=\"request-btn\"\r\n                            onClick={() => openRequestModal(teacher, skill)}\r\n                          >\r\n                            Request\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"empty-state\">\r\n                    <p>No teachers available for this skill yet.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <RequestModal />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BrowseSkills;","C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\MyRequests.js",[],"C:\\Users\\visha\\VSC\\skillswap\\frontend\\src\\components\\Login.js",[],{"ruleId":"33","severity":1,"message":"34","line":21,"column":6,"nodeType":"35","endLine":21,"endColumn":8,"suggestions":"36"},{"ruleId":"33","severity":1,"message":"34","line":25,"column":6,"nodeType":"35","endLine":25,"endColumn":15,"suggestions":"37"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSkills'. Either include it or remove the dependency array.","ArrayExpression",["38"],["39"],{"desc":"40","fix":"41"},{"desc":"42","fix":"43"},"Update the dependencies array to be: [loadSkills]",{"range":"44","text":"45"},"Update the dependencies array to be: [filters, loadSkills]",{"range":"46","text":"47"},[697,699],"[loadSkills]",[750,759],"[filters, loadSkills]"]